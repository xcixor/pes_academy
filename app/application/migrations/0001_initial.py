# Generated by Django 4.0.2 on 2022-05-09 05:18

import application.models.call_to_action
import application.models.document
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('stage', models.CharField(choices=[('step_one', 'Application Data Not Submitted'), ('step_two', 'Data Submitted'), ('step_three', 'Documents in review'), ('step_four', 'Verdict Passed')], default='step_one', max_length=100, verbose_name='Stage')),
                ('slug', models.SlugField(help_text='Unique text to append to the address for the application.', max_length=255, unique=True)),
                ('is_in_review', models.BooleanField(default=False, verbose_name='In Review')),
                ('eligibility', models.BooleanField(default=False, verbose_name='Eligibility')),
                ('to_advance', models.BooleanField(default=False, help_text='Whether to advance or avoid the application', verbose_name='Whether to Advance')),
                ('milestones', models.TextField(verbose_name='Milestones')),
                ('expected_max_score', models.IntegerField(default=0, verbose_name='Expected Max Score')),
                ('application_creator', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='application', to=settings.AUTH_USER_MODEL, verbose_name='Application Creator')),
            ],
            options={
                'verbose_name_plural': 'User Applications',
            },
        ),
        migrations.CreateModel(
            name='BusinessOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_name', models.CharField(max_length=255)),
                ('facebook_link', models.URLField(blank=True, null=True)),
                ('twitter_link', models.URLField(blank=True, null=True)),
                ('instagram_link', models.URLField(blank=True, null=True)),
                ('linkedin_link', models.URLField(blank=True, null=True)),
                ('whatsapp_business_link', models.URLField(blank=True, null=True)),
                ('value_chain', models.CharField(choices=[('chain_one', 'Primary production (farming)'), ('chain_two', 'Input supplier'), ('chain_three', 'Processor (value addition)'), ('chain_four', 'Aggregator'), ('chain_five', 'Distributor'), ('chain_six', 'Retailer'), ('chain_seven', 'Service provider')], max_length=255)),
                ('existence_period', models.CharField(choices=[('period_one', 'Below 1 year'), ('period_two', 'More than 1 year but less than 2 years'), ('period_three', 'Between 2 to 5 years'), ('period_four', 'Over 5 years')], max_length=255)),
                ('stage', models.CharField(choices=[('stage_one', 'Product or service is still being developed'), ('stage_two', 'Product or service is at MVP stage. Currently piloting with target users'), ('stage_three', 'Product or service has been availed in the market. There are no sales or revenues as yet'), ('stage_four', 'Product or service is in the market. There are sales/revenues')], max_length=255)),
                ('organization_owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='business', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CallToAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='An image to display in the call to action page.', upload_to=application.models.call_to_action.image_directory_path)),
                ('tagline', models.CharField(help_text='A title for the call to action.', max_length=255)),
                ('description', models.TextField(help_text='A description of what the call to action is about.')),
                ('slug', models.SlugField(help_text='Unique text to append to the address for the call to action.', max_length=255, unique=True)),
                ('deadline', models.DateTimeField(help_text="The call to action's deadline.")),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date the call to action was created.')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The date the call to action was updated.')),
                ('available_for_applications', models.BooleanField(default=False, help_text='Designates whether applications can be made for this call to action. If checked it and is within the deadline, applicants can view it on the application page.')),
            ],
            options={
                'verbose_name_plural': 'Calls to Action',
            },
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('milestone', models.CharField(max_length=255)),
                ('businesses', models.ManyToManyField(blank=True, related_name='businesses', to='application.BusinessOrganization')),
            ],
        ),
        migrations.CreateModel(
            name='CovidImpact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('impact', models.TextField()),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='covid_impact', to='application.businessorganization')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(choices=[(1, 'Strongly Disagree'), (2, 'Disagree'), (3, 'Neutral'), (4, 'Agree'), (5, 'Strongly Agree')], default=1)),
                ('prompt', models.TextField()),
                ('question_position', models.IntegerField(help_text='The position of the question in the form')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='application.application')),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scores', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewers', to='application.application')),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationPrompt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('question_position', models.IntegerField(help_text='The position of the question in the form')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prompts', to='application.application')),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prompts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(max_length=200)),
                ('document', models.FileField(upload_to=application.models.document.image_directory_path)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='application.application')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='application.application')),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='application',
            name='call_to_action',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applications', to='application.calltoaction', verbose_name='Call To Action'),
        ),
    ]
